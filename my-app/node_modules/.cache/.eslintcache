[{"/Users/anmolsingh/React_Project/my-app/src/index.js":"1","/Users/anmolsingh/React_Project/my-app/src/App.js":"2","/Users/anmolsingh/React_Project/my-app/src/reportWebVitals.js":"3","/Users/anmolsingh/React_Project/my-app/src/header.js":"4","/Users/anmolsingh/React_Project/my-app/src/questions-page/index.js":"5","/Users/anmolsingh/React_Project/my-app/src/questions-page/questions.js":"6","/Users/anmolsingh/React_Project/my-app/src/questions-page/question-item.js":"7","/Users/anmolsingh/React_Project/my-app/src/questions-page/with-questions.js":"8","/Users/anmolsingh/React_Project/my-app/src/questions-page/questions_data.js":"9"},{"size":500,"mtime":1649532246960,"results":"10","hashOfConfig":"11"},{"size":259,"mtime":1649729367388,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1649532246961,"results":"13","hashOfConfig":"11"},{"size":713,"mtime":1649553803469,"results":"14","hashOfConfig":"11"},{"size":61,"mtime":1649729351279,"results":"15","hashOfConfig":"11"},{"size":2088,"mtime":1649711192624,"results":"16","hashOfConfig":"11"},{"size":1445,"mtime":1649729285728,"results":"17","hashOfConfig":"11"},{"size":568,"mtime":1649538192837,"results":"18","hashOfConfig":"11"},{"size":13598,"mtime":1649583529008,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10is7pc",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anmolsingh/React_Project/my-app/src/index.js",[],[],"/Users/anmolsingh/React_Project/my-app/src/App.js",[],[],"/Users/anmolsingh/React_Project/my-app/src/reportWebVitals.js",[],[],"/Users/anmolsingh/React_Project/my-app/src/header.js",[],[],"/Users/anmolsingh/React_Project/my-app/src/questions-page/index.js",[],[],["50","51"],"/Users/anmolsingh/React_Project/my-app/src/questions-page/questions.js",["52","53"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport WithQuestions from './with-questions';\nimport QuestionItem from './question-item';\n\nconst QuestionsList = ({ questions }) => {\n\n    let responses = useRef({});\n\n    let [is_submitted, set_is_submitted] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('set_question_response', setQuestionResponse);\n        return () => {\n            window.removeEventListener('set_question_response', setQuestionResponse);\n        }\n    }, []);\n\n    const handleReset = () => window.location.reload();\n\n    const setQuestionResponse = (ev) => {\n        let { varname, selected_option } = ev.detail;\n        let previous_responses = { ...responses.current };\n        previous_responses[varname] = selected_option;\n        responses.current = previous_responses;\n    };\n\n    const handleSubmit = () => {\n        let updated_responses = { ...responses.current };\n        fetch(\"http://localhost:5000/post_survey_responses\", {\n            method: \"POST\",\n            body: JSON.stringify(updated_responses),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => {\n            if (response.status == 200) {\n                set_is_submitted(true);\n            }\n        });\n    }\n\n    return is_submitted ? (\n        <div className=\"after-submission\">\n            <span className=\"after-submission-text\">Thanks for taking the time to fill out the survey</span>\n            <span className=\"button center pointer\" onClick={handleReset}>Fill out another survey</span>\n        </div>\n    ) : (\n        <>\n            <div className=\"questions-list center\">\n                {\n                    questions.map(question => <QuestionItem key={question.varname} question={question} />)\n                }\n\n            </div>\n            <div className=\"button center pointer\" onClick={handleSubmit}>\n                Submit\n            </div>\n        </>\n    );\n}\n\nexport default () => {\n    return <WithQuestions QuestionsList={QuestionsList} />;\n};","/Users/anmolsingh/React_Project/my-app/src/questions-page/question-item.js",["54"],[],"\nimport { useState } from 'react';\n\nconst QuestionItem = ({ question }) => {\n    const {\n        questiontext,\n        varname,\n    } = question\n\n    const [selected, setSelected] = useState(-1);\n\n    const options = [\n        question.option1,\n        question.option2,\n        question.option3,\n        question.option4,\n        question.option5,\n        question.option6,\n        question.option7,\n    ];\n\n    const handleOptionClick = (event) => {\n        let selected_option = Number(event.target.getAttribute('data-id'));\n        setSelected(selected_option);\n        let evt = new CustomEvent('set_question_response', { detail: { selected_option: selected_option + 1, varname } });\n        window.dispatchEvent(evt);\n    }\n\n    return (\n        <div className=\"question-item center\">\n            <p className=\"question-description\">{`Q. ${questiontext}`}</p>\n            <div className=\"center options-list\">\n                {\n                    options.map((option, index) =>\n                        <span\n                            key={index}\n                            data-id={index}\n                            className={`question-option pointer ${selected == index ? 'selected' : ''}`}\n                            onClick={handleOptionClick}\n                        >\n                            {option}\n                        </span>)\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default QuestionItem","/Users/anmolsingh/React_Project/my-app/src/questions-page/with-questions.js",[],[],"/Users/anmolsingh/React_Project/my-app/src/questions-page/questions_data.js",[],[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":36,"column":33,"nodeType":"61","messageId":"62","endLine":36,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":62,"column":1,"nodeType":"65","endLine":64,"endColumn":3},{"ruleId":"59","severity":1,"message":"60","line":38,"column":76,"nodeType":"61","messageId":"62","endLine":38,"endColumn":78},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]