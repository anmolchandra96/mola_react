{"ast":null,"code":"var _jsxFileName = \"/Users/anmolsingh/React_Project/my-app/src/questions-page/question-item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionItem = _ref => {\n  _s();\n\n  let {\n    question\n  } = _ref;\n  const {\n    questiontext,\n    varname\n  } = question;\n  const [selected, setSelected] = useState(-1);\n  const options = [question.option1, question.option2, question.option3, question.option4, question.option5, question.option6, question.option7];\n\n  const handleOptionClick = event => {\n    let selected_option = Number(event.target.getAttribute('data-id'));\n    setSelected(selected_option);\n    let evt = new CustomEvent('set_question_response', {\n      detail: {\n        selected_option: selected_option + 1,\n        varname\n      }\n    });\n    window.dispatchEvent(evt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-item center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question-description\",\n      children: `Q. ${questiontext}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center options-list\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-id\": index,\n        className: `question-option pointer ${selected == index ? 'selected' : ''}`,\n        onClick: handleOptionClick,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionItem, \"T2E5pNOAilGIHgmP7MwlhOxKR74=\");\n\n_c = QuestionItem;\nexport default QuestionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionItem\");","map":{"version":3,"sources":["/Users/anmolsingh/React_Project/my-app/src/questions-page/question-item.js"],"names":["useState","QuestionItem","question","questiontext","varname","selected","setSelected","options","option1","option2","option3","option4","option5","option6","option7","handleOptionClick","event","selected_option","Number","target","getAttribute","evt","CustomEvent","detail","window","dispatchEvent","map","option","index"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnC,QAAM;AACFC,IAAAA,YADE;AAEFC,IAAAA;AAFE,MAGFF,QAHJ;AAKA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAC,CAAF,CAAxC;AAEA,QAAMO,OAAO,GAAG,CACZL,QAAQ,CAACM,OADG,EAEZN,QAAQ,CAACO,OAFG,EAGZP,QAAQ,CAACQ,OAHG,EAIZR,QAAQ,CAACS,OAJG,EAKZT,QAAQ,CAACU,OALG,EAMZV,QAAQ,CAACW,OANG,EAOZX,QAAQ,CAACY,OAPG,CAAhB;;AAUA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAIC,eAAe,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAD,CAA5B;AACAd,IAAAA,WAAW,CAACW,eAAD,CAAX;AACA,QAAII,GAAG,GAAG,IAAIC,WAAJ,CAAgB,uBAAhB,EAAyC;AAAEC,MAAAA,MAAM,EAAE;AAAEN,QAAAA,eAAe,EAAEA,eAAe,GAAG,CAArC;AAAwCb,QAAAA;AAAxC;AAAV,KAAzC,CAAV;AACAoB,IAAAA,MAAM,CAACC,aAAP,CAAqBJ,GAArB;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA,gBAAsC,MAAKlB,YAAa;AAAxD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAEQI,OAAO,CAACmB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACR;AAEI,mBAASA,KAFb;AAGI,QAAA,SAAS,EAAG,2BAA0BvB,QAAQ,IAAIuB,KAAZ,GAAoB,UAApB,GAAiC,EAAG,EAH9E;AAII,QAAA,OAAO,EAAEb,iBAJb;AAAA,kBAMKY;AANL,SACSC,KADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3CD;;GAAM3B,Y;;KAAAA,Y;AA6CN,eAAeA,YAAf","sourcesContent":["\nimport { useState } from 'react';\n\nconst QuestionItem = ({ question }) => {\n    const {\n        questiontext,\n        varname,\n    } = question\n\n    const [selected, setSelected] = useState(-1);\n\n    const options = [\n        question.option1,\n        question.option2,\n        question.option3,\n        question.option4,\n        question.option5,\n        question.option6,\n        question.option7,\n    ];\n\n    const handleOptionClick = (event) => {\n        let selected_option = Number(event.target.getAttribute('data-id'));\n        setSelected(selected_option);\n        let evt = new CustomEvent('set_question_response', { detail: { selected_option: selected_option + 1, varname } });\n        window.dispatchEvent(evt);\n    }\n\n    return (\n        <div className=\"question-item center\">\n            <p className=\"question-description\">{`Q. ${questiontext}`}</p>\n            <div className=\"center options-list\">\n                {\n                    options.map((option, index) =>\n                        <span\n                            key={index}\n                            data-id={index}\n                            className={`question-option pointer ${selected == index ? 'selected' : ''}`}\n                            onClick={handleOptionClick}\n                        >\n                            {option}\n                        </span>)\n                }\n            </div>\n        </div>\n    )\n};\n\nexport default QuestionItem"]},"metadata":{},"sourceType":"module"}