{"ast":null,"code":"var _jsxFileName = \"/Users/anmolsingh/Projects/my-app/src/questions-page/questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport WithQuestions from './with-questions';\nimport QuestionItem from './question-item';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionsList = _ref => {\n  _s();\n\n  let {\n    questions\n  } = _ref;\n  let responses = useRef({});\n  useEffect(() => {\n    window.addEventListener('set_question_response', setQuestionResponse);\n    return () => {\n      window.removeEventListener('set_question_response', setQuestionResponse);\n    };\n  }, []);\n\n  const setQuestionResponse = ev => {\n    let {\n      varname,\n      selected_option\n    } = ev.detail;\n    let previous_responses = { ...responses.current\n    };\n    previous_responses[varname] = selected_option;\n    responses.current = previous_responses;\n  };\n\n  console.log('QuestionsList');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-list center\",\n    children: questions.map(question => /*#__PURE__*/_jsxDEV(QuestionItem, {\n      question: question\n    }, question.varname, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 43\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionsList, \"a1veddGT9/jZJqmka3dGBBtq5Fo=\");\n\n_c = QuestionsList;\nexport default (() => {\n  return /*#__PURE__*/_jsxDEV(WithQuestions, {\n    QuestionsList: QuestionsList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"sources":["/Users/anmolsingh/Projects/my-app/src/questions-page/questions.js"],"names":["React","useEffect","useRef","WithQuestions","QuestionItem","QuestionsList","questions","responses","window","addEventListener","setQuestionResponse","removeEventListener","ev","varname","selected_option","detail","previous_responses","current","console","log","map","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,MAAMC,aAAa,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAErC,MAAIC,SAAS,GAAGL,MAAM,CAAC,EAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,uBAAxB,EAAiDC,mBAAjD;AACA,WAAO,MAAM;AACTF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,uBAA3B,EAAoDD,mBAApD;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMA,mBAAmB,GAAIE,EAAD,IAAQ;AAChC,QAAI;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA+BF,EAAE,CAACG,MAAtC;AACA,QAAIC,kBAAkB,GAAG,EAAE,GAAGT,SAAS,CAACU;AAAf,KAAzB;AACAD,IAAAA,kBAAkB,CAACH,OAAD,CAAlB,GAA8BC,eAA9B;AACAP,IAAAA,SAAS,CAACU,OAAV,GAAoBD,kBAApB;AACH,GALD;;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cAEQb,SAAS,CAACc,GAAV,CAAcC,QAAQ,iBAAI,QAAC,YAAD;AAAqC,MAAA,QAAQ,EAAEA;AAA/C,OAAmBA,QAAQ,CAACR,OAA5B;AAAA;AAAA;AAAA;AAAA,YAA1B;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BD;;GAAMR,a;;KAAAA,a;AA8BN,gBAAe,MAAM;AACjB,sBAAO,QAAC,aAAD;AAAe,IAAA,aAAa,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport WithQuestions from './with-questions';\nimport QuestionItem from './question-item';\n\nconst QuestionsList = ({ questions }) => {\n\n    let responses = useRef({});\n\n    useEffect(() => {\n        window.addEventListener('set_question_response', setQuestionResponse);\n        return () => {\n            window.removeEventListener('set_question_response', setQuestionResponse);\n        }\n    }, []);\n\n\n    const setQuestionResponse = (ev) => {\n        let { varname, selected_option } = ev.detail;\n        let previous_responses = { ...responses.current };\n        previous_responses[varname] = selected_option;\n        responses.current = previous_responses;\n    };\n\n    console.log('QuestionsList')\n\n    return (\n        <div className=\"questions-list center\">\n            {\n                questions.map(question => <QuestionItem key={question.varname} question={question} />)\n            }\n        </div>\n    );\n}\n\nexport default () => {\n    return <WithQuestions QuestionsList={QuestionsList} />;\n};"]},"metadata":{},"sourceType":"module"}